Install certbot :-
-----------------
Install certbot in the server.

wget https://dl.eff.org/certbot-auto
chmod a+x certbot-auto

Run the command to generate certificate
./certbot-auto certonly --verbose


How would you like to authenticate with the ACME CA?                 │  
                                                        │ ┌──────────────────────────────────────────────────────────────────┐ │  
                                                        │ │     1  Apache Web Server - Alpha (apache)                        │ │  
                                                        │ │     2  Place files in webroot directory (webroot)                │ │  
                                                        │ │     3  Automatically use a temporary webserver (standalone)    

Use option 3

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/yourwebsite.com/fullchain.pem. Your cert will
   expire on 2016-08-29. To obtain a new or tweaked version of this
   certificate in the future, simply run certbot-auto again. To
   non-interactively renew *all* of your ceriticates, run
   "certbot-auto renew"
 - If you lose your account credentials, you can recover through
   e-mails sent to support@yourwebsite.com.
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le


cd /etc/letsencrypt/live/yourwebsite.com/

ls -ltr

lrwxrwxrwx 1 root root 41 May 31 12:21 privkey.pem -> ../../archive/yourwebsite.com/privkey2.pem
lrwxrwxrwx 1 root root 43 May 31 12:21 fullchain.pem -> ../../archive/yourwebsite.com/fullchain2.pem
lrwxrwxrwx 1 root root 39 May 31 12:21 chain.pem -> ../../archive/yourwebsite.com/chain2.pem
lrwxrwxrwx 1 root root 38 May 31 12:21 cert.pem -> ../../archive/yourwebsite.com/cert2.pem

/etc/letsencrypt/live/yourwebsite.com/cert.pem

/etc/letsencrypt/live/yourwebsite.com/chain.pem

cd /etc/nginx/sites-enabled/

sudo vim yourwebsite-qa

  ssl on;
  ssl_certificate /etc/letsencrypt/live/yourwebsite.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/yourwebsite.com/privkey.pem;

Certificate Renewal :-
----------------------
cd ~/certbot
./certbot-auto renew --pre-hook "service nginx stop" --post-hook "service nginx start"

This will stop Nginx so standalone can bind to the necessary ports and then restart Nginx after the plugin is finished.
The hooks will only be run if a certificate is due for renewal, so you can run this command frequently without unnecessarily stopping your webserver.
More information about renewal hooks can be found by running certbot --help renew.

If you’re sure that this command executes successfully without human intervention, you can add the command to crontab (since certificates are only renewed when
they’re determined to be near expiry, the command can run on a regular basis, like every week or every day). In that case, you are likely to want to use the
-q or --quiet quiet flag to silence all output except errors.

sudo touch /var/log/cron.log
sudo chmod 666 /var/log/cron.log
sudo chown ubuntu:ubuntu /var/log/cron.log


0 3 20 * * /bin/bash -l -c 'cd ~/certbot && ./certbot-auto renew --pre-hook "service nginx stop" --post-hook "service nginx start" >> /var/log/cron.log'


Add --dry-run as option to generate test certificate

===================================================================

For manual creation of SSL certificate follow the below link :

https://isabelcastillo.com/lets-encrypt-ssl-certificate-godaddy-shared-cpanel
