devise :-
---------
gem 'devise'

rails generate devise:install

steps:
Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here 
     is an example of default_url_options appropriate for a development environment 
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { :host => 'localhost:3000' }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root :to => "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying Rails 3.1+ on Heroku, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:

       rails g devise:views


rails generate devise User
	   
	   
routes:-

  devise_for :users

  resources :people

  root to: 'people#index'

config/environments/development.rb
config.action_mailer.default_url_options = { :host => 'localhost:3000' }

  
class ApplicationController < ActionController::Base
  protect_from_forgery

  before_filter :authenticate_user!
end

application layout :-

	<div id="user_nav">
      <% if user_signed_in? %>
        Signed in as <%= current_user.email %>. Not you?
        <%= link_to "Sign out", destroy_user_session_path, :method => :delete %>
      <% else %>
        <%= link_to "Sign up", new_user_registration_path %> or
        <%= link_to "Sign in", new_user_session_path %>
      <% end %>
    </div>


Bootstrap CSS :-
=================
group :assets do
  gem 'twitter-bootstrap-rails'
  gem 'less-rails'
end

rails g bootstrap:install

# to override existing html erbs with new theme 
rails g bootstrap:themed products -f


RSpec :-
========
rails new myapp --skip-test-unit

group :development, :test do
  gem 'rspec-rails'
end

bundle

rails generate rspec:install