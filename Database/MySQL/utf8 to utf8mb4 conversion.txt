UTF-8 to UTF8MB4 conversion for Rails 3.2.x Apps :-
---------------------------------------------------

https://github.com/rails/rails/issues/3727

http://mathiasbynens.be/notes/mysql-utf8mb4

http://dev.mysql.com/doc/refman/5.5/en/charset-unicode-upgrading.html

https://github.com/rails/rails/issues/9855

Change ROW_FORMAT to DYNAMIC to solve add_index issue : index size too long (767 byts)
http://bugs.mysql.com/bug.php?id=68453 

https://mathiasbynens.be/notes/mysql-utf8mb4

http://stackoverflow.com/questions/15824956/saving-utf8mb4-strings-to-mysql

http://apps.timwhitlock.info/emoji/tables/unicode#block-6c-other-missing-symbols

http://nhw.pl/wp/2008/09/16/mysql-collate-setting-in-rails-application


Read utf8mb4 emoji's stored in the Database :-
----------------------------------------------

http://mathiasbynens.be/notes/mysql-utf8mb4#utf8-to-utf8mb4

1) Needs DB connection with encoding
database.yml
encoding: utf8mb4

2) gemfile -> gem 'mysql2', '0.3.12b6':git => "https://github.com/brianmario/mysql2.git"

3) JSON escape : Monkey patch to json to not to skip utf8mb4 characters. 

module ActiveSupport::JSON::Encoding
  class << self
    def escape(string)
      if string.respond_to?(:force_encoding)
        string = string.encode(::Encoding::UTF_8, :undef => :replace).force_encoding(::Encoding::BINARY)
      end
      json = string.gsub(escape_regex) { |s| ESCAPED_CHARS[s] }
      json = %("#{json}")
      json.force_encoding(::Encoding::UTF_8) if json.respond_to?(:force_encoding)
      json
    end
  end
end


/etc/init.d/mysql restart --character-set-server=utf8mb4 --collation-
server=utf8mb4_unicode_ci

#this is to start mysql server
mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#emoji chars
http://apps.timwhitlock.info/emoji/tables/unicode
http://www.unicode.org/charts/PDF/U1F600.pdf
http://getemoji.com/
