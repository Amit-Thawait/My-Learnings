Basic docker commands :
-----------------------
docker

docker -v

docker info

docker images

docker ps

docker ps -a

docker run -i -t ubuntu:xenial /bin/bash

docker inspect ubuntu:xenial

docker restart compassionate_bhabha

docker attach compassionate_bhabha

docker run -i -t -d ubuntu:xenial /bin/bash
docker run -itd ubuntu:xenial /bin/bash

docker inspect <image_name>
docker inspect compassionate_bhabha
docker inspect compassionate_bhabha | grep IP

docker stop <image_name>
docker stop compassionate_bhabha

----------------------------------------------------------------------------------
Inside docker container if "apt-get update" is not working then follow these steps
nm-tool | grep DNS
then go to /etc/default/docker file
DOCKER_OPTS="--dns <ip1> --dns <ip2>"

OR
nmcli dev list | grep IP4.DNS

The CentOS equivalent is the /etc/sysconfig/docker
-----------------------------------------------------------------------------------

docker search <image_name>
docker search training/sinatra

docker commit -m "commit message" -a "<User name>" <docker-container-name> <new_image_name>
docker commit -m "Installed SSH and created test user" -a "Amit Thawait" flamboyant_edison amitthawait/ubuntu-sshd:v1

mkdir build
cd build
vim Dockerfile
-----------
# This is a custom ubuntu image with SSH installed
FROM ubuntu:latest
MAINTAINER Amit Thawait <amit17thawait@gmail.com>
RUN apt-get update
RUN apt-get install -y telnet openssh-server
-----------
docker build -t="new_image_name" <location of docker_file>
docker build -t="amitthawait/ubuntu-sshdonly:v2" .
OR
docker build -t="amitthawait/ubuntu-sshdonly:v2" < /location/Dockerfile

The advantage of using a Dockerfile is that it creates an instance of docker container using the base image and then deletes it upon exiting whereas in the case of
commiting a changes to docker container it doesn't removes the instance there by taking up disk space.
